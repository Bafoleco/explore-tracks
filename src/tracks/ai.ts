import {TrackInfo} from '../types'
export const ai: TrackInfo = {"requirements": [{"numRequired": "1", "courseOptions": [{"title": "Artificial Intelligence: Principles and Techniques", "description": "Artificial intelligence (AI) has had a huge impact in many areas, including medical diagnosis, speech recognition, robotics, web search, advertising, and scheduling. This course focuses on the foundational concepts that drive these applications. In short, AI is the mathematics of making good decisions given incomplete information (hence the need for probability) and limited computation (hence the need for algorithms). Specific topics include search, constraint satisfaction, game playing,n Markov decision processes, graphical models, machine learning, and logic. Prerequisites: CS 103 or CS 103B/X, CS 106B or CS 106X, CS 109, and CS 161 (algorithms, probability, and object-oriented programming in Python). We highly recommend comfort with these concepts before taking the course, as we will be building on them with little review.", "code": "CS 221"}]}, {"numRequired": "4", "courseOptions": [{"title": "Introduction to Robotics (ME 320)", "description": "Robotics foundations in modeling, design, planning, and control. Class covers relevant results from geometry, kinematics, statics, dynamics, motion planning, and control, providing the basic methodologies and tools in robotics research and applications. Concepts and models are illustrated through physical robot platforms, interactive robot simulations, and video segments relevant to historical research developments or to emerging application areas in the field. Recommended: matrix algebra.", "code": "CS 223A"}, {"title": "Natural Language Processing with Deep Learning (LINGUIST 284, SYMSYS 195N)", "description": "Methods for processing human language information and the underlying computational properties of natural languages. Focus on deep learning approaches: understanding, implementing, training, debugging, visualizing, and extending neural network models for a variety of language understanding tasks. Exploration of natural language tasks ranging from simple word level and syntactic processing to coreference, question answering, and machine translation. Examination of representative papers and systems and completion of a final project applying a complex neural network model to a large-scale NLP problem. Prerequisites: calculus and linear algebra; CS124, CS221, or CS229.", "code": "CS 224N"}, {"title": "Spoken Language Processing (LINGUIST 285)", "description": "Introduction to spoken language technology with an emphasis on dialogue and conversational systems.  Deep learning and other methods for automatic speech recognition, speech synthesis, affect detection, dialogue management, and applications to digital assistants and spoken language understanding systems.  Prerequisites: CS124, CS221, CS224N, or CS229.", "code": "CS 224S"}, {"title": "Natural Language Understanding (LINGUIST 188, LINGUIST 288, SYMSYS 195U)", "description": "Project-oriented class focused on developing systems and algorithms for robust machine understanding of human language. Draws on theoretical concepts from linguistics, natural language processing, and machine learning. Topics include lexical semantics, distributed representations of meaning, relation extraction, semantic parsing, sentiment analysis, and dialogue agents, with special lectures on developing projects, presenting research results, and making connections with industry. Prerequisites: one of LINGUIST 180/280, CS 124, CS 224N, or CS 224S.", "code": "CS 224U"}, {"title": "Machine Learning with Graphs", "description": "Many complex data can be represented as a graph of relationships between objects. Such networks are a fundamental tool for modeling complex social, technological, and biological systems. This course focuses on the computational, algorithmic, and modeling challenges specific to the analysis of massive graphs. By means of studying the underlying graph structure and its features, students are introduced to machine learning techniques and data mining tools apt to reveal insights on a variety of networks. Topics include: representation learning and Graph Neural Networks; algorithms for the World Wide Web; reasoning over Knowledge Graphs; influence maximization; disease outbreak detection, social network analysis. Prerequisites: CS109, any introductory course in Machine Learning.", "code": "CS 224W"}, {"title": "Probabilistic Graphical Models: Principles and Techniques", "description": "Probabilistic graphical modeling languages for representing complex domains, algorithms for reasoning using these representations, and learning these representations from data. Topics include: Bayesian and Markov networks, extensions to temporal modeling such as hidden Markov models and dynamic Bayesian networks, exact and approximate probabilistic inference algorithms, and methods for learning models from data. Also included are sample applications to various domains including speech recognition, biological modeling and discovery, medical diagnosis, message encoding, vision, and robot motion planning. Prerequisites: basic probability theory and algorithm design and analysis.", "code": "CS 228"}, {"title": "Machine Learning (STATS 229)", "description": "Topics: statistical pattern recognition, linear and non-linear regression, non-parametric methods, exponential family, GLMs, support vector machines, kernel methods, deep learning, model/feature selection, learning theory, ML advice, clustering, density estimation, EM, dimensionality reduction, ICA, PCA, reinforcement learning and adaptive control, Markov decision processes, approximate dynamic programming, and policy search. Prerequisites: knowledge of basic computer science principles and skills at a level sufficient to write a reasonably non-trivial computer program in Python/NumPy to the equivalency of CS106A, CS106B, or CS106X, familiarity with probability theory to the equivalency of CS 109, MATH151, or STATS 116, and familiarity with multivariable calculus and linear algebra to the equivalency of MATH51 or CS205.", "code": "CS 229"}, {"title": "Machine Learning Theory (STATS 214)", "description": "How do we use mathematical thinking to design better machine learning methods? This course focuses on developing mathematical tools for answering these questions. This course will cover fundamental concepts and principled algorithms in machine learning, particularly those that are related to modern large-scale non-linear models. The topics include concentration inequalities, generalization bounds via uniform convergence, non-convex optimization, implicit regularization effect in deep learning, and unsupervised learning and domain adaptations. nnPrerequisites: linear algebra ( MATH 51 or CS 205), probability theory (STATS 116, MATH 151 or CS 109), and machine learning ( CS 229, STATS 229, or STATS 315A).", "code": "CS 229M"}, {"title": "Computer Vision: From 3D Reconstruction to Recognition", "description": "(Formerly 223B) An introduction to the concepts and applications in computer vision. Topics include: cameras and projection models, low-level image processing methods such as filtering and edge detection; mid-level vision topics such as segmentation and clustering; shape reconstruction from stereo, as well as high-level vision tasks such as object recognition, scene recognition, face detection and human motion categorization. Prerequisites: linear algebra, basic probability and statistics.", "code": "CS 231A"}, {"title": "Deep Learning for Computer Vision", "description": "Computer Vision has become ubiquitous in our society, with applications in search, image understanding, apps, mapping, medicine, drones, and self-driving cars. Core to many of these applications are visual recognition tasks such as image classification and object detection. Recent developments in neural network approaches have greatly advanced the performance of these state-of-the-art visual recognition systems. This course is a deep dive into details of neural-network based deep learning methods for computer vision. During this course, students will learn to implement, train and debug their own neural networks and gain a detailed understanding of cutting-edge research in computer vision. We will cover learning algorithms, neural network architectures, and practical engineering tricks for training and fine-tuning networks for visual recognition tasks. Prerequisites: Proficiency in Python; CS131 and CS229 or equivalents; MATH21 or equivalent, linear algebra.", "code": "CS 231N"}, {"title": "Reinforcement Learning", "description": "To realize the dreams and impact of AI requires autonomous systems that learn to make good decisions. Reinforcement learning is one powerful paradigm for doing so, and it is relevant to an enormous range of tasks, including robotics, game playing, consumer modeling and healthcare. This class will briefly cover background on Markov decision processes and reinforcement learning, before focusing on some of the central problems, including scaling up to large domains and the exploration challenge. One key tool for tackling complex RL domains is deep learning and this class will include at least one homework on deep reinforcement learning. Prerequisites: proficiency in python, CS 229 or equivalents or permission of the instructor; linear algebra, basic probability.", "code": "CS 234"}, {"title": "Principles of Robot Autonomy I (AA 174A, AA 274A, EE 160A, EE 260A)", "description": "Basic principles for endowing mobile autonomous robots with perception, planning, and decision-making capabilities. Algorithmic approaches for robot perception, localization, and simultaneous localization and mapping; control of non-linear systems, learning-based control, and robot motion planning; introduction to methodologies for reasoning under uncertainty, e.g., (partially observable) Markov decision processes. Extensive use of the Robot Operating System (ROS) for demonstrations and hands-on activities. Prerequisites: CS 106A or equivalent, CME 100 or equivalent (for linear algebra), and CME 106 or equivalent (for probability theory).", "code": "CS 237A"}, {"title": "Principles of Robot Autonomy II (AA 174B, AA 274B, EE 260B)", "description": "This course teaches advanced principles for endowing mobile autonomous robots with capabilities to autonomously learn new skills and to physically interact with the environment and with humans. It also provides an overview of different robot system architectures. Concepts that will be covered in the course are: Reinforcement Learning and its relationship to optimal control, contact and dynamics models for prehensile and non-prehensile robot manipulation, imitation learning and human intent inference, as well as different system architectures and their verification. Students will earn the theoretical foundations for these concepts and implement them on mobile manipulation platforms. In homeworks, the Robot Operating System (ROS) will be used extensively for demonstrations and hands-on activities. Prerequisites: CS106A or equivalent, CME 100 or equivalent (for linear algebra), CME 106 or equivalent (for probability theory), and AA 171/274.", "code": "CS 237B"}, {"title": "Decision Making under Uncertainty (AA 228)", "description": "This course is designed to increase awareness and appreciation for why uncertainty matters, particularly for aerospace applications. Introduces decision making under uncertainty from a computational perspective and provides an overview of the necessary tools for building autonomous and decision-support systems. Following an introduction to probabilistic models and decision theory, the course will cover computational methods for solving decision problems with stochastic dynamics, model uncertainty, and imperfect state information. Topics include: Bayesian networks, influence diagrams, dynamic programming, reinforcement learning, and partially observable Markov decision processes. Applications cover: air traffic control, aviation surveillance systems, autonomous vehicles, and robotic planetary exploration. Prerequisites: basic probability and fluency in a high-level programming language.", "code": "CS 238"}]}, {"numRequired": "x", "courseOptions": [{"title": "Continuous Mathematical Methods with an Emphasis on Machine Learning", "description": "A survey of numerical approaches to the continuous mathematics used throughout computer science with an emphasis on machine and deep learning. Although motivated from the standpoint of machine learning, the course will focus on the underlying mathematical methods including computational linear algebra and optimization, as well as special topics such as automatic differentiation via backward propagation, momentum methods from ordinary differential equations, CNNs, RNNs, etc. Written homework assignments and (straightforward) quizzes focus on various concepts; additionally, students can opt in to a series of programming assignments geared towards neural network creation, training, and inference. (Replaces CS205A, and satisfies all similar requirements.) Prerequisites: Math 51; Math104 or MATH113 or equivalent or comfort with the associated material.", "code": "CS 205L"}, {"title": "Hardware Accelerators for Machine Learning", "description": "This course provides in-depth coverage of the architectural techniques used to design accelerators for training and inference in machine learning systems. This course will cover classical ML algorithms such as linear regression and support vector machines as well as DNN models such as convolutional neural nets, and recurrent neural nets. We will consider both training and inference for these models and discuss the impact of parameters such as batch size, precision, sparsity and compression on the accuracy of these models. We will cover the design of accelerators for ML model inference and training. Students will become familiar with hardware implementation techniques for using parallelism, locality, and low precision to implement the core computational kernels used in ML. To design energy-efficient accelerators, students will develop the intuition to make trade-offs between ML model parameters and hardware implementation techniques. Students will read recent research papers and complete a design project. Prerequisites: CS 149 or EE 180. CS 229 is ideal, but not required.", "code": "CS 217"}, {"title": "Conversational Virtual Assistants with Deep Learning", "description": "While commercial virtual assistants today can perform over hundreds of thousands of skills, they require a tremendous amount of manual labor. This course focuses on the latest virtual assistant research that uses deep learning to lower the development cost, improve the scalability and robustness, and to add dialogue capabilities to enhance the user experience. Students will learn both the theory and practice with written and programming assignments, as well as a course project of their own design. Topics include: a virtual assistant architecture that uses deep learning to (1) semantically parse dialogues to the ThingTalk virtual assistant programming language, (2) generate responses, and (3) recover from parsing errors through user feedback; neural dialogue semantic parser generators from high-level specifications such as database schemas and API signatures; robust, sample-efficient training for dialogues by combining few-shot data with synthesized data; multilingual, mixed-initiative, multimodal assistants; federated privacy-protecting assistants. nnPrerequisites: one of LINGUIST 180/280, CS 124, CS 224N, CS 224S, 224U.", "code": "CS 224V"}, {"title": "Experimental Robotics", "description": "Hands-on laboratory course experience in robotic manipulation. Topics include robot kinematics, dynamics, control, compliance, sensor-based collision avoidance, and human-robot interfaces. Second half of class is devoted to final projects using various robotic platforms to build and demonstrate new robot task capabilities. Previous projects include the development of autonomous robot behaviors of drawing, painting, playing air hocket, yoyo, basketball, ping-pong or xylophone. Prerequisites: 223A or equivalent.", "code": "CS 225A"}, {"title": "General Game Playing", "description": "A general game playing system accepts a formal description of a game to play it without human intervention or algorithms designed for specific games. Hands-on introduction to these systems and artificial intelligence techniques such as knowledge representation, reasoning, learning, and rational behavior. Students create GGP systems to compete with each other and in external competitions. Prerequisite: programming experience. Recommended: 103 or equivalent.", "code": "CS 227B"}, {"title": "Machine Learning Theory (STATS 214)", "description": "How do we use mathematical thinking to design better machine learning methods? This course focuses on developing mathematical tools for answering these questions. This course will cover fundamental concepts and principled algorithms in machine learning, particularly those that are related to modern large-scale non-linear models. The topics include concentration inequalities, generalization bounds via uniform convergence, non-convex optimization, implicit regularization effect in deep learning, and unsupervised learning and domain adaptations. nnPrerequisites: linear algebra ( MATH 51 or CS 205), probability theory (STATS 116, MATH 151 or CS 109), and machine learning ( CS 229, STATS 229, or STATS 315A).", "code": "CS 229M"}, {"title": "Deep Learning", "description": "Deep Learning is one of the most highly sought after skills in AI. We will help you become good at Deep Learning. In this course, you will learn the foundations of Deep Learning, understand how to build neural networks, and learn how to lead successful machine learning projects. You will learn about Convolutional networks, RNNs, LSTM, Adam, Dropout, BatchNorm, Xavier/He initialization, and more. You will work on case studies from healthcare, autonomous driving, sign language reading, music generation, and natural language processing. You will master not only the theory, but also see how it is applied in industry. You will practice all these ideas in Python and in TensorFlow, which we will teach. AI is transforming multiple industries. After this course, you will likely find creative ways to apply it to your work. This class is taught in the flipped-classroom format. You will watch videos and complete in-depth programming assignments and online quizzes at home, then come in to class for advanced discussions and work on projects. This class will culminate in an open-ended final project, which the teaching team will help you on. Prerequisites: Familiarity with programming in Python and Linear Algebra (matrix / vector multiplications). CS 229 may be taken concurrently.", "code": "CS 230"}, {"title": "Digital Image Processing (EE 368)", "description": "Image sampling and quantization color, point operations, segmentation, morphological image processing, linear image filtering and correlation, image transforms, eigenimages, multiresolution image processing, noise reduction and restoration, feature extraction and recognition tasks, image registration. Emphasis is on the general principles of image processing. Students learn to apply material by implementing and investigating image processing algorithms in Matlab and optionally on Android mobile devices. Term project. Recommended: EE261, EE278.", "code": "CS 232"}, {"title": "Geometric and Topological Data Analysis (CME 251)", "description": "Mathematical and computational tools for the analysis of data with geometric content, such images, videos, 3D scans, GPS traces -- as well as for other data embedded into geometric spaces. Linear and non-linear dimensionality reduction techniques. Graph representations of data and spectral methods. The rudiments of computational topology and persistent homology on sampled spaces, with applications. Global and local geometry descriptors allowing for various kinds of invariances. Alignment, matching, and map/correspondence computation between geometric data sets. Annotation tools for geometric data. Geometric deep learning on graphs and sets. Function spaces and functional maps. Networks of data sets and joint learning for segmentation and labeling. Prerequisites: discrete algorithms at the level of CS161; linear algebra at the level of Math51 or CME103.", "code": "CS 233"}, {"title": "Computational Methods for Biomedical Image Analysis and Interpretation (BIOMEDIN 260, RAD 260)", "description": "The latest biological and medical imaging modalities and their applications in research and medicine. Focus is on computational analytic and interpretive approaches to optimize extraction and use of biological and clinical imaging data for diagnostic and therapeutic translational medical applications. Topics include major image databases, fundamental methods in image processing and quantitative extraction of image features, structured recording of image information including semantic features and ontologies, indexing, search and content-based image retrieval. Case studies include linking image data to genomic,  phenotypic and clinical data, developing representations of image phenotypes for use in medical decision support and research applications and the role that biomedical imaging informatics plays in new questions in biomedical science. Includes a project. Enrollment for 3 units requires instructor consent. Prerequisites: programming ability at the level of CS 106A, familiarity with statistics, basic biology. Knowledge of Matlab or Python highly recommended.", "code": "CS 235"}, {"title": "Deep Generative Models", "description": "Generative models are widely used in many subfields of AI and Machine Learning. Recent advances in parameterizing these models using neural networks, combined with progress in stochastic optimization methods, have enabled scalable modeling of complex, high-dimensional data including images, text, and speech. In this course, we will study the probabilistic foundations and learning algorithms for deep generative models, including Variational Autoencoders (VAE), Generative Adversarial Networks (GAN), and flow models. The course will also discuss application areas that have benefitted from deep generative models, including computer vision, speech and natural language processing, and reinforcement learning. Prerequisites: Basic knowledge about machine learning from at least one of CS 221, 228, 229 or 230. Students will work with computational and mathematical models and should have a basic knowledge of probabilities and calculus. Proficiency in some programming language, preferably Python, required.", "code": "CS 236"}, {"title": "Generative Adversarial Networks", "description": "Generative Adversarial Networks (GANs) have rapidly emerged as the state-of-the-art technique in realistic image generation. This course presents theoretical intuition and practical knowledge on GANs, from their simplest to their state-of-the-art forms. Their benefits and applications span realistic image editing that is omnipresent in popular app filters, enabling tumor classification under low data schemes in medicine, and visualizing realistic scenarios of climate change destruction. This course also examines key challenges of GANs today, including reliable evaluation, inherent biases, and training stability. After this course, students should be familiar with GANs and the broader generative models and machine learning contexts in which these models are situated. Prerequisites: linear algebra, statistics, CS106B, plus a graduate-level AI course such as: CS230, CS229 (or CS129), or CS221.", "code": "CS 236G"}, {"title": "Advanced Topics in Sequential Decision Making (AA 229)", "description": "Survey of recent research advances in intelligent decision making for dynamic environments from a computational perspective. Efficient algorithms for single and multiagent planning in situations where a model of the environment may or may not be known. Partially observable Markov decision processes, approximate dynamic programming, and reinforcement learning. New approaches for overcoming challenges in generalization from experience, exploration of the environment, and model representation so that these methods can scale to real problems in a variety of domains including aerospace, air traffic control, and robotics. Students are expected to produce an original research paper on a relevant topic. Prerequisites: AA 228/CS 238 or CS 221.", "code": "CS 239"}, {"title": "Mining Massive Data Sets", "description": "The availability of massive datasets is revolutionizing science and industry. This course discusses data mining and machine learning algorithms for analyzing very large amounts of data. Topics include: Big data systems (Hadoop, Spark); Link Analysis (PageRank, spam detection); Similarity search (locality-sensitive hashing, shingling, min-hashing); Stream data processing; Recommender Systems; Analysis of social-network graphs; Association rules; Dimensionality reduction (UV, SVD, and CUR decompositions); Algorithms for large-scale mining (clustering, nearest-neighbor search); Large-scale machine learning (decision tree ensembles); Multi-armed bandit; Computational advertising. Prerequisites: At least one of CS107 or CS145.", "code": "CS 246"}, {"title": "Mining Massive Data Sets Hadoop Lab", "description": "Supplement to CS 246 providing additional material on the Apache Hadoop family of technologies. Students will learn how to implement data mining algorithms using Hadoop and Apache Spark, how to implement and debug complex data mining and data transformations, and how to use two of the most popular big data SQL tools. Topics: data mining, machine learning, data ingest, and data transformations using Hadoop, Spark, Apache Impala, Apache Hive, Apache Kafka, Apache Sqoop, Apache Flume, Apache Avro, and Apache Parquet.  Prerequisite: CS 107 or equivalent.", "code": "CS 246H"}, {"title": "Modeling Biomedical Systems (BIOMEDIN 210)", "description": "At the core of informatics is the problem of creating computable models of biomedical phenomena.  This course explores methods for modeling biomedical systems with an emphasis on contemporary semantic technology, including knowledge graphs.  Topics: data modeling, knowledge representation, controlled terminologies, ontologies, reusable problem solvers, modeling problems in healthcare information technology and other aspects of informatics.  Students acquire hands-on experience with several systems and tools.  Prerequisites: CS106A.  Basic familiarity with Python programming, biology, probability, and logic are assumed.", "code": "CS 270"}, {"title": "Artificial Intelligence in Healthcare (BIODS 220, BIOMEDIN 220)", "description": "Healthcare is one of the most exciting application domains of artificial intelligence, with transformative potential in areas ranging from medical image analysis to electronic health records-based prediction and precision medicine. This course will involve a deep dive into recent advances in AI in healthcare, focusing in particular on deep learning approaches for healthcare problems. We will start from foundations of neural networks, and then study cutting-edge deep learning models in the context of a variety of healthcare data including image, text, multimodal and time-series data. In the latter part of the course, we will cover advanced topics on open challenges of integrating AI in a societal application such as healthcare, including interpretability, robustness, privacy and fairness. The course aims to provide students from diverse backgrounds with both conceptual understanding and practical grounding of cutting-edge research on AI in healthcare. Prerequisites: Proficiency in Python or ability to self-learn; familiarity with machine learning and basic calculus, linear algebra, statistics;  familiarity with deep learning highly recommended (e.g. prior experience training a deep learning model).", "code": "CS 271"}, {"title": "The Human Genome Source Code (BIOMEDIN 273A, DBIO 273A)", "description": "A computational primer to &quot;hacking&quot; the most amazing operating system &quot;disk&quot; on the planet: your genome. Handling genomic data is deceptively easy. But that's muscle. You want to be the brain, too. Topics include genome sequencing (assembling source code from code fragments); the human genome functional landscape: variable assignments (genes), control-flow logic (gene regulation) and run-time stack (epigenomics); human disease and personalized genomics (as a hunt for bugs in the human code); genome editing (code injection) to cure the incurable; and the source code modifications behind amazing animal adaptations. The course will introduce ideas from computational genomics, machine learning and natural language processing. Course includes primers on molecular biology, and text processing languages. Prerequisites: CS106A or equivalent. No biological background assumed.", "code": "CS 273A"}, {"title": "Deep Learning in Genomics and Biomedicine (BIODS 237, BIOMEDIN 273B, GENE 236)", "description": "Recent breakthroughs in high-throughput genomic and biomedical data are transforming biological sciences into &quot;big data&quot; disciplines. In parallel, progress in deep neural networks are revolutionizing fields such as image recognition, natural language processing and, more broadly, AI. This course explores the exciting intersection between these two advances. The course will start with an introduction to deep learning and overview the relevant background in genomics and high-throughput biotechnology, focusing on the available data and their relevance. It will then cover the ongoing developments in deep learning (supervised, unsupervised and generative models) with the focus on the applications of these methods to biomedical data, which are beginning to produced dramatic results. In addition to predictive modeling, the course emphasizes how to visualize and extract interpretable, biological insights from such models. Recent papers from the literature will be presented and discussed. Experts in the field will present guest lectures. Students will be introduced to and work with popular deep learning software frameworks. Students will work in groups on a final class project using real world datasets. Prerequisites: College calculus, linear algebra, basic probability and statistics such as CS 109, and basic machine learning such as CS 229. No prior knowledge of genomics is necessary.", "code": "CS 273B"}, {"title": "Representations and Algorithms for Computational Molecular Biology (BIOE 214, BIOMEDIN 214, GENE 214)", "description": "Topics: This is a graduate level introduction to bioinformatics and computational biology, algorithms for alignment of biological sequences and structures, computing with strings, phylogenetic tree construction, hidden Markov models, basic structural computations on proteins, protein structure prediction, molecular dynamics and energy minimization, statistical analysis of 3D biological data, integration of data sources, knowledge representation and controlled terminologies for molecular biology, microarray analysis, chemoinformatics, pharmacogenetics, network biology.  Note:  For Fall 2021, Dr. Altman will be away on sabbatical and so class will be taught from lecture videos recorded in fall of 2018.  The class will be entirely online, with no scheduled meeting times.  Lectures will be released in batches to encourage pacing.  A team of TAs will manage all class logistics and grading.  Firm prerequisite: CS 106B.", "code": "CS 274"}, {"title": "Translational Bioinformatics (BIOE 217, BIOMEDIN 217, GENE 217)", "description": "Computational methods for the translation of biomedical data into diagnostic, prognostic, and therapeutic applications in medicine. Topics: multi-scale omics data generation and analysis, utility and limitations of public biomedical resources, machine learning and data mining, issues and opportunities in drug discovery, and mobile/digital health solutions. Case studies and course project. Prerequisites: programming ability at the level of CS 106A and familiarity with biology and statistics.", "code": "CS 275"}, {"title": "Symbolic Musical Information (MUSIC 253)", "description": "Properties of symbolic data for music applications including advanced notation systems, data durability, mark-up languages, optical music recognition, and data-translation tasks.  Hands-on work involves these digital score formats: Guido Music Notation, Humdrum, MuseData, MEI, MusicXML, SCORE, and MIDI internal code.", "code": "CS 275A"}, {"title": "Computational Music Analysis (MUSIC 254)", "description": "Leveraging off three synchronized sets of symbolic data resources for notation and analysis, the lab portion introduces students to the open-source Humdrum Toolkit for music representation and analysis.  Issues of data content and quality as well as methods of information retrieval, visualization, and summarization are considered in class. Grading based primarily on student projects. Prerequisite: 253 or consent of instructor.", "code": "CS 275B"}, {"title": "Information Retrieval and Web Search (LINGUIST 286)", "description": "Text information retrieval systems; efficient text indexing; Boolean, vector space, and probabilistic retrieval models; ranking and rank aggregation; evaluating IR systems; text clustering and classification; Web search engines including crawling and indexing, link-based algorithms, web metadata, and question answering; distributed word representations. Prerequisites: CS 107, CS 109, CS 161.", "code": "CS 276"}, {"title": "Computational Biology: Structure and Organization of Biomolecules and Cells (BIOE 279, BIOMEDIN 279, BIOPHYS 279, CME 279)", "description": "Computational techniques for investigating and designing the three-dimensional structure and dynamics of biomolecules and cells.  These computational methods play an increasingly important role in drug discovery, medicine, bioengineering, and molecular biology.  Course topics include protein structure prediction, protein design, drug screening, molecular simulation, cellular-level simulation, image analysis for microscopy, and methods for solving structures from crystallography and electron microscopy data.  Prerequisites: elementary programming background (CS 106A or equivalent) and an introductory course in biology or biochemistry.", "code": "CS 279"}, {"title": "Ethics of Artificial Intelligence", "description": "Machine learning has become an indispensable tool for creating intelligentnapplications, accelerating scientific discoveries, and making better data-drivenndecisions. Yet, the automation and scaling of such tasks can have troubling negative societal impacts. Through practical case studies, you will identify issues of fairness, justice and truth in AI applications. You will then apply recent techniques to detect and mitigate such algorithmic biases, along with methods to provide more transparency and explainability to state-of-the-art ML models. Finally, you will derive fundamental formal results on the limits of such techniques, along with tradeoffs that must be made for their practical application. CS229 or equivalent classes or experience.", "code": "CS 281"}, {"title": "Automated Reasoning: Theory and Applications", "description": "Intelligent computer agents must reason about complex, uncertain, and dynamic environments. This course is a graduate level introduction to automated reasoning techniques and their applications, covering logical and probabilistic approaches. Topics include: logical and probabilistic foundations, backtracking strategies and algorithms behind modern SAT solvers, stochastic local search and Markov Chain Monte Carlo algorithms, variational techniques, classes of reasoning tasks and reductions, and applications.", "code": "CS 323"}, {"title": "Triangulating Intelligence: Melding Neuroscience, Psychology, and AI (PSYCH 225)", "description": "This course will cover both classic findings and the latest research progress on the intersection of cognitive science, neuroscience, and artificial intelligence: How does the study of minds and machines inform and guide each other? What are the assumptions, representations, or learning mechanisms that are shared (across multiple disciplines, and what are different? How can we build a synergistic partnership between cognitive psychology, neuroscience, and artificial intelligence? We will focus on object perception and social cognition (human capacities, especially in infancy and early childhood) and the ways in which these capacities are formalized and reverse-engineered (computer vision, reinforcement learning). Through paper reading and review, discussion, and the final project, students will learn the common foundations shared behind neuroscience, cognitive science, and AI research and leverage them to develop their own research project in these areas. Recommended prerequisites: PSYCH 1, PSYCH 24/SYMSYS 1/CS 24, CS 221, CS 231N", "code": "CS 322"}, {"title": "Understanding and Developing Large Language Models", "description": "The field of natural language processing (NLP) has been transformed by massive pre-trained language models.  They form the basis of all state-of-the-art systems across a wide range of tasks and have shown an impressive ability to generate fluent text and perform few-shot learning.  At the same time, these models are hard to understand and give rise to new ethical and scalability challenges.  In this course, students will learn the fundamentals about the modeling, theory, ethics, and systems aspects of massive language models, as well as gain hands-on experience working with them.", "code": "CS 324"}, {"title": "Data for Sustainable Development (EARTHSYS 162, EARTHSYS 262)", "description": "The sustainable development goals (SDGs) encompass many important aspects of human and ecosystem well-being that are traditionally difficult to measure. This project-based course will focus on ways to use inexpensive, unconventional data streams to measure outcomes relevant to SDGs, including poverty, hunger, health, governance, and economic activity. Students will apply machine learning techniques to various projects outlined at the beginning of the quarter. The main learning goals are to gain experience conducting and communicating original research. Prior knowledge of machine learning techniques, such as from CS 221, CS 229, CS 231N, STATS 202, or STATS 216 is required. Open to both undergraduate and graduate students. Enrollment limited to 24. Students must apply for the class by filling out the form at https://goo.gl/forms/9LSZF7lPkHadix5D3. A permission code will be given to admitted students to register for the class.", "code": "CS 325B"}, {"title": "Topics in Advanced Robotic Manipulation", "description": "This course provides a survey of the most important and influential concepts in autonomous robotic manipulation. It includes classical concepts that are still widely used and recent approaches that have changed the way we look autonomous manipulation. We cover approaches towards motion planning and control using visual and tactile perception as well as machine learning. This course is especially concerned with new approaches for overcoming challenges in generalization from experience, exploration of the environment, and learning representation so that these methods can scale to real problems. Students are expected to present one paper in a tutorial, debate a paper once from the Pro and once from the Con side. They are also expected to propose an original research project and work on it towards a research paper. Recommended: CS 131, 223A, 229 or equivalents.", "code": "CS 326"}, {"title": "Advanced Robotic Manipulation", "description": "Advanced control methodologies and novel design techniques for complex human-like robotic and bio mechanical systems. Class covers the fundamentals in operational space dynamics and control, elastic planning, human motion synthesis. Topics include redundancy, inertial properties, haptics, simulation, robot cooperation, mobile manipulation, human-friendly robot design, humanoids and whole-body control. Additional topcs in emerging areas are presented by groups of students at the end-of-quarter mini-symposium. Prerequisites: 223A or equivalent.", "code": "CS 327A"}, {"title": "Topics in Computer Vision", "description": "Fundamental issues of, and mathematical models for, computer vision. Sample topics: camera calibration, texture, stereo, motion, shape representation, image retrieval, experimental techniques. May be repeated for credit. Prerequisites: 205, 223B, or equivalents.", "code": "CS 328"}, {"title": "Topics in Artificial Intelligence", "description": "Advanced material is often taught for the first time as a topics course, perhaps by a faculty member visiting from another institution. May be repeated for credit.", "code": "CS 329"}, {"title": "Machine Learning Under Distributional Shifts", "description": "The progress of machine learning systems has seemed remarkable and inexorable a wide array of benchmark tasks including image classification, speech recognition, and question answering have seen consistent and substantial accuracy gains year on year. However, these same models are known to fail consistently on atypical examples and domains not contained within the training data. The goal of the course is to introduce the variety of areas in which distributional shifts appear, as well as provide theoretical characterization and learning bounds for distribution shifts. Prerequisites: CS229 or equivalent. Recommended: CS229T (or basic knowledge of learning theory).", "code": "CS 329D"}, {"title": "Machine Learning on Embedded Systems (EE 292D)", "description": "This is a project-based class where students will learn how to develop machine learning models for execution in resource constrained environments such as embedded systems. In this class students will learn about techniques to optimize machine learning models and deploy them on a device such as a Arduino, Raspberry PI, Jetson, or Edge TPUs. The class has a significant project component. Prerequisites: CS 107(required), CS 229 (recommended), CS 230 (recommended).", "code": "CS 329E"}, {"title": "Practical Machine Learning", "description": "Applying Machine Learning (ML) to solve real problems accurately and robustly requires more than just training the latest ML model. First, you will learn practical techniques to deal with data. This matters since real data is often not independently and identically distributed. It includes detecting covariate, concept, and label shifts, and modeling dependent random variables such as the ones in time series and graphs. Next, you will learn how to efficiently train ML models, such as tuning hyper-parameters, model combination, and transfer learning. Last, you will learn about fairness and model explainability, and how to efficiently deploy models. This class will teach both statistics, algorithms and code implementations. Homeworks and the final project emphasize solving real problems. nnPrerequisites: Python programing and machine learning (CS 229), basic statistics.nnPlease view course website here: https://c.d2l.ai/stanford-cs329p/", "code": "CS 329P"}, {"title": "Machine Learning Systems Design", "description": "This project-based course covers the iterative process for designing, developing, and deploying machine learning systems. It focuses on systems that require massive datasets and compute resources, such as large neural networks. Students will learn about data management, data engineering, approaches to model selection, training, scaling, how to continually monitor and deploy changes to ML systems, as well as the human side of ML projects. In the process, students will learn about important issues including privacy, fairness, and security. Pre-requisites: At least one of the following; CS229, CS230, CS231N, CS224N or equivalent. Students should have a good understanding of machine learning algorithms and should be familiar with at least one framework such as TensorFlow, PyTorch, JAX.", "code": "CS 329S"}, {"title": "Trustworthy Machine Learning", "description": "This course will provide an introduction to state-of-the-art ML methods designed to make AI more trustworthy. The course focuses on four concepts: explanations, fairness, privacy, and robustness. We first discuss how to explain and interpret ML model outputs and inner workings. Then, we examine how bias and unfairness can arise in ML models and learn strategies to mitigate this problem. Next, we look at differential privacy and membership inference in the context of models leaking sensitive information when they are not supposed to. Finally, we look at adversarial attacks and methods for imparting robustness against adversarial manipulation.nnStudents will gain understanding of a set of methods and tools for deploying transparent, ethically sound, and robust machine learning solutions. Students will complete labs, homework assignments, and discuss weekly readings. Prerequisites: CS229 or similar introductory Python-based ML class; knowledge of deep learning such as CS230, CS231N; familiarity with ML frameworks in Python (scikit-learn, Keras) assumed.", "code": "CS 329T"}, {"title": "Deep Multi-task and Meta Learning", "description": "While deep learning has achieved remarkable success in supervised and reinforcement learning problems, such as image classification, speech recognition, and game playing, these models are, to a large degree, specialized for the single task they are trained for. This course will cover the setting where there are multiple tasks to be solved, and study how the structure arising from multiple tasks can be leveraged to learn more efficiently or effectively. This includes: goal-conditioned reinforcement learning techniques that leverage the structure of the provided goal space to learn many tasks significantly faster; meta-learning methods that aim to learn efficient learning algorithms that can learn new tasks quickly; curriculum and lifelong learning, where the problem requires learning a sequence of tasks, leveraging their shared structure to enable knowledge transfer. This is a graduate-level course. By the end of the course, students should be able to understand and implement the state-of-the-art multi-task learning algorithms and be ready to conduct research on these topics. Prerequisites: CS 229 or equivalent. Familiarity with deep learning, reinforcement learning, and machine learning is assumed.", "code": "CS 330"}, {"title": "Interactive Simulation for Robot Learning", "description": "This course provides a research survey of advanced methods for robot learning in simulation, analyzing the simulation techniques and recent research results enabled by advances in physics and virtual sensing simulation. The course covers two main components: agent-environment interactions and domains for multi-agent and human-robot interaction. First, we cover agent-environment interactions by studying novel simulation environments for robotics, imitation and reinforcement learning methods, simulation for navigation and manipulation and `sim2real' techniques. In the second part, we explore models and algorithms for simulation and robot learning in multi-agent domains and human-robot interaction, studying the principles of learning for interactive tasks in which each agent collaborates to accomplish tasks. The topics include domains of social navigation, human-robot collaborative manipulation and multi-agent settings.nnThis a project-based seminar class. Projects will leverage the state-of-the-art simulation environment iGibson, in which students will develop simulations to explore learning and planning methods for diverse domains. We will provide a list of suggested projects but students might also propose an original idea. The course will cover a set of research papers with presentations by students. This is a research field in rapid transformation with exciting research lines. The goal of the class is to provide practical experience and understanding of the main research lines to enable students to conduct innovative research in this field.", "code": "CS 331B"}, {"title": "Advanced Survey of Reinforcement Learning", "description": "This class will provide a core overview of essential topics and new research frontiers in reinforcement learning. Planned topics include: model free and model based reinforcement learning, policy search, Monte Carlo Tree Search planning methods, off policy evaluation, exploration, imitation learning, temporal abstraction/hierarchical approaches, safety and risk sensitivity, human-in-the-loop RL, inverse reinforcement learning, learning to communicate, and insights from human learning. Students are expected to create an original research paper on a related topic. Prerequisites: CS 221 or AA 238/CS 238 or CS 234 or CS 229 or similar experience.", "code": "CS 332"}, {"title": "Algorithms for Interactive Robotics", "description": "AI agents need to collaborate and interact with humans in many different settings such as bots operating on social media and crowdsourcing platforms, AI assistants brokering transactions on electronic marketplaces, autonomous vehicles driving alongside humans, or robots interacting with and assisting humans in homes. Our goal in this class is to learn about and design algorithms that enable robots and AI agents to reason about their actions, interact with one another, the humans, and the environment they live in, as well as plan safe strategies that humans can trust and rely on. This is a project-based graduate course that studies algorithms in robotics, machine learning, and control theory, which can improve the state-of-the-art human-AI systems. nnRecommended: Introductory course in AI (CS 221) and Machine Learning (CS 229).", "code": "CS 333"}, {"title": "Project in Mining Massive Data Sets", "description": "Students work in teams of three to solve a problem involving the analysis of a massive dataset.  A proposal, early in March is required. There will be an information session (announced in CS246) explaining the datasets available in early March and this information will also be on the CS341 course website in late February.  Each accepted team will be assigned a mentor who will work with them regularly throughout the quarter.  Teams will also be provided access to significant computing resources on a commercial public cloud.", "code": "CS 341"}, {"title": "Data-intensive Systems for the Next 1000x", "description": "The last decade saw enormous shifts in the design of large-scale data-intensive systems due to the rise of Internet services, cloud computing, and Big Data processing. Where will we see the next 1000x increases in scale and data volume, and how should data-intensive systems accordingly evolve? This course will critically examine a range of trends, including the Internet of Things, drones, smart cities, and emerging hardware capabilities, through the lens of software systems research and design. Students will perform a comparative analysis by reading and discussing cutting-edge research while performing their own original research. Prerequisites: Strong background in software systems, especially databases (CS 245) and distributed systems (CS 244B), and/or machine learning (CS 229). Undergraduates who have completed CS 245 are strongly encouraged to attend.", "code": "CS 345S"}, {"title": "Neural Models for 3D Geometry", "description": "Course Description: Generation of high-quality 3D models and scenes by leveraging machine learning tools and approaches. Survey of geometry representations. Public 3D object and scene data sets. Neural architectures for geometry, including deep architectures for point clouds and meshes. Generative models for 3D: autoencoders, GANs, neural implicits, neural ODEs, autoregressive models. Conditional generation based on images or partial geometry. Variation generation. Evaluation metrics for content generation. Use of synthetic data in ML training pipelines. Prerequisites: CS148 and the rudiments of deep learning. Recommended: CS229.", "code": "CS 348N"}, {"title": "Algorithmic Techniques for Big Data", "description": "(Previously numbered CS 369G.) Designing algorithms for efficient processing of large data sets poses unique challenges. This course will discuss algorithmic paradigms that have been developed to efficiently process data sets that are much larger than available memory. We will cover streaming algorithms and sketching methods that produce compact datanstructures, dimension reduction methods that preserve geometric structure, efficient algorithms for numerical linear algebra, graph sparsification methods, as well as impossibility results for these techniques.", "code": "CS 368"}, {"title": "Algorithmic Perspective on Machine Learning", "description": "Many problems in machine learning are intractable in the worst case, andnpose a challenge for the design of algorithms with provable guarantees. In this course, we will discuss several success stories at the intersection of algorithm design and machine learning, focusing on devising appropriate models and mathematical tools to facilitate rigorous analysis.", "code": "CS 369L"}, {"title": "Metric Embeddings and Algorithmic Applications", "description": "Low distortion embeddings of finite metric spaces is a topic at the intersection of mathematics and theoretical computer science. Much progress in this area in recent years has been motivated by algorithmic applications. Mapping complicated metrics of interest to simpler metrics (normed spaces, trees, and so on) gives access to a powerful algorithmic toolkit for approximation algorithms, online algorithms as well as for efficient search and indexing of large data sets. In a different vein, convex relaxations are a useful tool for graph partitioning problems; central to the analysis are metric embedding questions for certainly computationally defined metrics. In this course, we will see several classical and recent results on metric embeddings with a focus on algorithmic applications. Students will be expected to have a strong background in algorithms and probability.", "code": "CS 369M"}, {"title": "Computational Biology in Four Dimensions (BIOMEDIN 371, BIOPHYS 371, CME 371)", "description": "Cutting-edge research on computational techniques for investigating and designing the three-dimensional structure and dynamics of biomolecules, cells, and everything in between.  These techniques, which draw on approaches ranging from physics-based simulation to machine learning, play an increasingly important role in drug discovery, medicine, bioengineering, and molecular biology.  Course is devoted primarily to reading, presentation, discussion, and critique of papers describing important recent research developments.  Prerequisite: CS 106A or equivalent, and an introductory course in biology or biochemistry. Recommended: some experience in mathematical modeling (does not need to be a formal course).", "code": "CS 371"}, {"title": "Large-Scale Neural Network Modeling for Neuroscience (PSYCH 249)", "description": "Introduction to designing, building, and training large-scale neural networks for modeling brain and behavioral data, including: deep convolutional neural network models of sensory systems (vision, audition, somatosensation); variational and generative methods for neural interpretation; recurrent neural networks for dynamics, memory and attention; interactive agent-based deep reinforcement learning for cognitive modeling; and methods and metrics for comparing such models to real-world neural data. Attention will be given both to established methods as well as cutting-edge techniques. Students will learn conceptual bases for deep neural network models and will also implement learn to implement and train large-scale models in Tensorflow using GPUs. Requirements: Fluency in Unix shell and Python programming; familiarity with differential equations, linear algebra, and probability theory; priori experience with modern machine learning concepts (e.g. CS229) and basic neural network training tools (eg. CS230 and/or CS231n). Prior knowledge of basic cognitive science or neuroscience not required but helpful.", "code": "CS 375"}, {"title": "Topics in Human-Computer Interaction", "description": "Contents change each quarter. May be repeated for credit. See http://hci.stanford.edu/academics for offerings.", "code": "CS 377"}, {"title": "Designing Solutions to Global Grand Challenges", "description": "In this course we creatively apply information technologies to collectively attack Global Grand Challenges (e.g., global warming, rising healthcare costs and declining access, and ensuring quality education for all). Interdisciplinary student teams will carry out need-finding within a target domain, followed by brainstorming to propose a quarter long project. Teams will spend the rest of the quarter applying user-centered design methods to rapidly iterate through design, prototyping, and testing of their solutions. This course will interweave a weekly lecture with a weekly studio session where students apply the techniques hands-on in a small-scale, supportive environment.", "code": "CS 377E"}, {"title": "Designing Serious Games", "description": "Over the last few years we have seen the rise of &quot;serious games&quot; to promote understanding of complex social and ecological challenges, and to create passion for solving them. This project-based course provides an introduction to game design principals while applying them to games that teach. Run as a hands-on studio class, students will design and prototype games for social change and civic engagement. We will learn the fundamentals of games design via lecture and extensive reading in order to make effective games to explore issues facing society today. The course culminates in an end-of- quarter open house to showcase our games. Prerequisite: CS147 or equivalent. 247G recommended, but not required.", "code": "CS 377G"}, {"title": "Introduction to the Design of Smart Products (ME 216M)", "description": "This course will focus on the technical mechatronic skills as well as the human factors and interaction design considerations required for the design of smart products and devices. Students will learn techniques for rapid prototyping of smart devices, best practices for physical interaction design, fundamentals of affordances and signifiers, and interaction across networked devices. Students will be introduced to design guidelines for integrating electrical components such as PCBs into mechanical assemblies and consider the physical form of devices, not just as enclosures but also as a central component of the smart product. Prerequisites include: CS106A and E40 highly recommended, or instructor approval.", "code": "CS 377N"}, {"title": "Designing for Accessibility (ME 214)", "description": "Designing for accessibility is a valuable and important skill in the UX community. As businesses are becoming more aware of the needs and scope of people with some form of disability, the benefits of universal design, where designing for accessibility ends up benefiting everyone, are becoming more apparent. This class introduces fundamental Human Computer Interaction (HCI) concepts and skills in designing for accessibility through individual assignments. Student projects will identify an accessibility need, prototype a design solution, and conduct a user study with a person with a disability.", "code": "CS 377Q"}, {"title": "Topics in Human-Computer Interaction: Teaching Studio Classes", "description": "Studio teaching is a practice that dates back to the apprentice days of art studios. In this course, you will learn to teach project based classes that include critique. We will also cover effective coaching, design of projects and exercises, and curating material in order to maximize the effectiveness of a flipped classroom. Recommended for TAs in HCI.", "code": "CS 377T"}, {"title": "Understanding Users", "description": "This project-based class focuses on understanding the use of technology in the world. Students will learn generative and evaluative research methods to explore how systems are appropriated into everyday life in a quarter-long project where they design, implement and evaluate a novel mobile application. Quantitative (e.g. A/B testing, instrumentation, analytics, surveys) and qualitative (e.g. diary studies, contextual inquiry, ethnography) methods and their combination will be covered along with practical experience applying these methods in their project. Prerequisites: CS 147, 193A/193P (or equivalent mobile programming experience).", "code": "CS 377U"}, {"title": "Computational Models of the Neocortex", "description": "This class focuses on building agents that achieve human-level performance in specialized technical domains and are adept at collaborating with humans using natural language. We draw upon research in cognitive and systems neuroscience to take advantage of what is known about how humans communicate and solve problems in order to design advanced artificial neural network architectures. For more detail on invited speakers, schedule of talks and project milestones, see here:&nbsp;&nbsp;https://web.stanford.edu/class/cs379c/class_messages_listing/curriculum/", "code": "CS 379C"}, {"title": "Computer Laboratory", "description": "For CS graduate students. A substantial computer program is designed and implemented; written report required. Recommended as a preparation for dissertation research. Register using the section number associated with the instructor. Prerequisite: consent of instructor.", "code": "CS 393"}, {"title": "Independent Database Project", "description": "For graduate students in Computer Science. Use of database management or file systems for a substantial application or implementation of components of database management system. Written analysis and evaluation required. Register using the section number associated with the instructor. Prerequisite: consent of instructor.", "code": "CS 395"}, {"title": "Computational Education", "description": "This course covers cutting-edge education algorithms used to model students, assess learning, and design widely deployable tools for open access education. The goal of the course is for you to be ready to lead your own computation education research project. Topics include knowledge tracing, generative grading, teachable agents, and challenges and opportunities implementing computational education in diverse contexts around the world. The course will consist of group and individual work and encourages creativity. Recommended: CS 142 and/or CS 221. Prerequisites: CS 106B and 109.", "code": "CS 398"}, {"title": "Independent Project", "description": "Letter grade only. This course is for masters students only. Undergraduate students should enroll in CS199; PhD students should enroll in CS499. Letter grade; if not appropriate, enroll in CS399P. Register using the section number associated with the instructor. Prerequisite: consent of instructor.", "code": "CS 399"}, {"title": "Independent Project", "description": "Graded satisfactory/no credit. This course is for masters students only. Undergraduate students should enroll in CS199; PhD students should enroll in CS499. S/NC only; if not appropriate, enroll in CS399. Register using the section number associated with the instructor. Prerequisite: consent of instructor.", "code": "CS 399P"}, {"title": "Probabilistic models of cognition: Reasoning and Learning (PSYCH 220A)", "description": "How can we understand intelligent behavior as computation? This course introduces probabilistic programming as a tool for cognitive modeling. We will use probabilistic generative models to explain aspects of human and artificial cognition. Topics will be drawn from causal and social reasoning, concept learning, and hierarchical abstraction.", "code": "CS 428A"}, {"title": "Probabilistic Models of Cognition: Language (LINGUIST 238B, PSYCH 220B)", "description": "How can we understand natural language use in computational terms? This course surveys probabilistic models for natural language semantics and pragmatics. It begins with an introduction to the Rational Speech Acts framework for modeling pragmatics as social reasoning. It then explores a variety of phenomena in language meaning and usage. Probabilistic programming will be used as a precise and practical way to express models.", "code": "CS 428B"}, {"title": "Computer Vision for Education and Social Science Research (EDUC 463)", "description": "Computer vision -- the study of how to design artificial systems that can perform high-level tasks related to image or video data (e.g. recognizing and locating objects in images and behaviors in videos) -- has seen recent dramatic success. In this course, we seek to give education and social science researchers the know-how needed to apply cutting edge computer vision algorithms in their work as well as an opportunity to workshop applications. Prerequisite: python familiarity and some experience with data.", "code": "CS 432"}, {"title": "Theoretical Neuroscience (PSYCH 242)", "description": "Survey of advances in the theory of neural networks, mainly (but not solely) focused on results of relevance to theoretical neuroscience.Synthesizing a variety of recent advances that potentially constitute the outlines of a theory for understanding when a given neural network architecture will work well on various classes of modern recognition and classification tasks, both from a representational expressivity and a learning efficiency point of view. Discussion of results in the neurally-plausible approximation of back propagation, theory of spiking neural networks, the relationship between network and task dimensionality, and network state coarse-graining. Exploration of estimation theory for various typical methods of mapping neural network models to neuroscience data, surveying and analyzing recent approaches from both sensory and motor areas in a variety of species. Prerequisites: calculus, linear algebra, and basic probability theory, or consent of instructor.", "code": "APPPHYS 293"}, {"title": "Introduction to Linear Dynamical Systems (CME 263)", "description": "Applied linear algebra and linear dynamical systems with applications to circuits, signal processing, communications, and control systems. Topics: least-squares approximations of over-determined equations, and least-norm solutions of underdetermined equations. Symmetric matrices, matrix norm, and singular-value decomposition. Eigenvalues, left and right eigenvectors, with dynamical interpretation. Matrix exponential, stability, and asymptotic behavior. Multi-input/multi-output systems, impulse and step matrices; convolution and transfer-matrix descriptions. Control, reachability, and state transfer; observability and least-squares state estimation. Prerequisites: Linear algebra and matrices as in ENGR 108 or MATH 104; ordinary differential equations and Laplace transforms as in EE 102B or CME 102.", "code": "EE 263"}, {"title": "Information Theory (STATS 376A)", "description": "(Formerly EE 376A.) Project-based course about how to measure, represent, and communicate information effectively. Why bits have become the universal currency for information exchange. How information theory bears on the design and operation of modern-day systems such as smartphones and the Internet. The role of entropy and mutual information in data compression, communication, and inference. Practical compressors and error correcting codes. The information theoretic way of thinking. Relations and applications to probability, statistics, machine learning, biological and artificial neural networks, genomics, quantum information, and blockchains. Prerequisite: a first undergraduate course in probability.", "code": "EE 276"}, {"title": "Introduction to Statistical Signal Processing", "description": "Review of basic probability and random variables. Random vectors and processes; convergence and limit theorems; IID, independent increment, Markov, and Gaussian random processes; stationary random processes; autocorrelation and power spectral density; mean square error estimation, detection, and linear estimation. Formerly EE 278B. Prerequisites: EE178 and linear systems and Fourier transforms at the level of EE102A,B or EE261.", "code": "EE 278"}, {"title": "Convex Optimization I (CME 364A)", "description": "Convex sets, functions, and optimization problems. The basics of convex analysis and theory of convex programming: optimality conditions, duality theory, theorems of alternative, and applications. Least-squares, linear and quadratic programs, semidefinite programming, and geometric programming. Numerical algorithms for smooth and equality constrained problems; interior-point methods for inequality constrained problems. Applications to signal processing, communications, control, analog and digital circuit design, computational geometry, statistics, machine learning, and mechanical engineering. Prerequisite: linear algebra such as EE263, basic probability.", "code": "EE 364A"}, {"title": "Convex Optimization II (CME 364B)", "description": "Continuation of 364A. Subgradient, cutting-plane, and ellipsoid methods. Decentralized convex optimization via primal and dual decomposition. Monotone operators and proximal methods; alternating direction method of multipliers.  Exploiting problem structure in implementation. Convex relaxations of hard problems. Global optimization via branch and bound. Robust and stochastic optimization. Applications in areas such as control, circuit design, signal processing, and communications. Course requirements include project. Prerequisite: 364A.", "code": "EE 364B"}, {"title": "Inference, Estimation, and Information Processing", "description": "Techniques and models for signal, data and information processing, with emphasis on incomplete data, non-ordered index sets and robust low-complexity methods. Linear models; regularization and shrinkage; dimensionality reduction; streaming algorithms; sketching; clustering, search in high dimension; low-rank models; principal component analysis. Applications include: positioning from pairwise distances; distributed sensing; measurement/traffic monitoring in networks; finding communities/clusters in networks; recommendation systems; inverse problems. Prerequisites: EE278 and EE263 or equivalent. Recommended but not required: EE378A", "code": "EE 378B"}, {"title": "Introduction to Control Design Techniques", "description": "Review of root-locus and frequency response techniques for control system analysis and synthesis. State-space techniques for modeling, full-state feedback regulator design, pole placement, and observer design. Combined observer and regulator design. Lab experiments on computers connected to mechanical systems. Prerequisites: 105, MATH 103, 113. Recommended: Matlab.", "code": "ENGR 205"}, {"title": "Analysis and Control of Nonlinear Systems", "description": "Introduction to nonlinear phenomena: multiple equilibria, limit cycles, bifurcations, complex dynamical behavior. Planar dynamical systems, analysis using phase plane techniques. Describing functions. Lyapunov stability theory. SISO feedback linearization, sliding mode control. Design examples. Prerequisite: 205.", "code": "ENGR 209A"}, {"title": "Fundamentals of Data Science: Prediction, Inference, Causality", "description": "This course is about understanding &quot;small data&quot;: these are datasets that allow interaction, visualization, exploration, and analysis on a local machine. The material provides an introduction to applied data analysis, with an emphasis on providing a conceptual framework for thinking about data from both statistical and machine learning perspectives. Topics will be drawn from the following list, depending on time constraints and class interest: approaches to data analysis: statistics (frequentist, Bayesian) and machine learning; binary classification; regression; bootstrapping; causal inference and experimental design; multiple hypothesis testing. Class lectures will be supplemented by data-driven problem sets and a project. Prerequisites: CME 100 or MATH 51; 120, 220 or STATS 116; experience with R at the level of CME/STATS 195 or equivalent.", "code": "MS&E 226"}, {"title": "Foundations of Decision Analysis", "description": "Coherent approach to decision making, using the metaphor of developing a structured conversation having desirable properties, and producing actional thought that leads to clarity of action. Emphasis is on creation of distinctions, representation of uncertainty by probability, development of alternatives, specification of preference, and the role of these elements in creating a normative approach to decisions. Information gathering opportunities in terms of a value measure. Relevance and decision diagrams to represent inference and decision.  How to assess the quality of decisions, the role of the decision analysis cycle, framing decisions, the decision hierarchy, biases in assessment, and uncertainty about probability. Sensitivity analysis, joint information, options, flexibility, assessing and using risk attitude, and decisions involving health and safety. Principles are applied to decisions in business, technology, law, and medicine. nPrerequisite: 220 or equivalent.", "code": "MS&E 252"}, {"title": "Dynamic Programming and Stochastic Control", "description": "Markov population decision chains in discrete and continuous time. Risk posture. Present value and Cesaro overtaking optimality. Optimal stopping. Successive approximation, policy improvement, and linear programming methods. Team decisions and stochastic programs; quadratic costs and certainty equivalents. Maximum principle. Controlled diffusions. Examples from inventory, overbooking, options, investment, queues, reliability, quality, capacity, transportation. MATLAB. Prerequisites: MATH 113, 115; Markov chains; linear programming.", "code": "MS&E 351"}, {"title": "Decision Analysis II: Professional Decision Analysis", "description": "How to organize the decision conversation, the role of the decision analysis cycle and the model sequence, assessing the quality of decisions, framing decisions, the decision hierarchy, strategy tables for alternative development, creating spare and effective decision diagrams, biases in assessment, knowledge maps, uncertainty about probability. Sensitivity analysis, approximations, value of revelation, joint information, options, flexibility, bidding, assessing and using corporate risk attitude, risk sharing and scaling, and decisions involving health and safety. See 353 for continuation. Prerequisite: 252.", "code": "MS&E 352"}, {"title": "Decision Analysis III: Frontiers of Decision Analysis", "description": "The concept of decision composite; probabilistic insurance and other challenges to the normative approach; the relationship of decision analysis to classical inference and data analysis procedures; the likelihood and exchangeability principles; inference, decision, and experimentation using conjugate distributions; developing a risk attitude based on general properties; alternative decision aiding practices such as analytic hierarchy and fuzzy approaches. Student presentations on current research. Goal is to prepare doctoral students for research. Prerequisite: 352.", "code": "MS&E 353"}, {"title": "Neural Network Models of Cognition", "description": "Neural Network models of cognitive and developmental processes and the neural basis of these processes, including contemporary deep learning models. Students learn about fundamental computational principles and classical as well as contemporary applications and carry out exercises in the first six weeks, then undertake projects during the last four weeks of the quarter. Some background in computer programming, familiarity with differential equations, linear algebra, and probability theory, and one or more courses in cognition, cognitive development or ncognitive/systems neuroscience is required.", "code": "PSYCH 209"}, {"title": "Data Mining and Analysis", "description": "Data mining is used to discover patterns and relationships in data. Emphasis is on large complex data sets such as those in very large databases or through web mining. Topics: decision trees, association rules, clustering, case based methods, and data visualization. Prereqs: Introductory courses in statistics or probability (e.g., Stats 60), linear algebra (e.g., Math 51), and computer programming (e.g., CS 105).", "code": "STATS 202"}, {"title": "Modern Applied Statistics: Learning", "description": "Overview of supervised learning. Linear regression and related methods. Model selection, least angle regression and the lasso, stepwise methods. Classification. Linear discriminant analysis, logistic regression, and support vector machines (SVMs).  Basis expansions, splines and regularization. Kernel methods. Generalized additive models. Kernel smoothing. Gaussian mixtures and the EM algorithm. Model assessment and selection: crossvalidation and the bootstrap. Pathwise coordinate descent. Sparse graphical models. Prerequisites: STATS 305A, 305B, 305C or consent of instructor.", "code": "STATS 315A"}, {"title": "Modern Applied Statistics: Learning II", "description": "Two-part sequence. New techniques for predictive and descriptive learning using ideas that bridge gaps among statistics, computer science, and artificial intelligence. Emphasis is on statistical aspects of their application and integration with more standard statistical methodology. Predictive learning refers to estimating models from data with the goal of predicting future outcomes, in particular, regression and classification models. Descriptive learning is used to discover general patterns and relationships in data without a predictive goal, viewed from a statistical perspective as computer automated exploratory analysis of large complex data sets.", "code": "STATS 315B"}]}]}